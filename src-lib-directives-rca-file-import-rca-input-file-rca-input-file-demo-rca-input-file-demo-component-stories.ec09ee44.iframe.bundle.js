"use strict";(self.webpackChunk_rca_design_system_library=self.webpackChunk_rca_design_system_library||[]).push([[9929],{"./libs/rca-design-system-library/src/lib/directives/rca-file-import/rca-input-file/rca-input-file-demo/rca-input-file-demo.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Fichier:()=>Fichier,default:()=>rca_input_file_demo_component_stories});var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),http=__webpack_require__("./node_modules/@angular/common/fesm2022/http.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),src=__webpack_require__("./libs/storybook-utils/src/index.ts"),ngx_highlightjs=__webpack_require__("./node_modules/ngx-highlightjs/fesm2020/ngx-highlightjs.mjs");let RcaInputFileDemoComponent=class RcaInputFileDemoComponent{personnaliseConfig={multiple:!0,maxFileSizeMo:3,allowedExtensions:["png"],allowedMimeTypes:["image/jpeg","image/png"]};maxSizeConfig={multiple:!0,maxFileSizeMo:1};extensionConfig={multiple:!0,allowedExtensions:[".jpg",".PNG"]};mimeConfig={multiple:!0,allowedMimeTypes:["image/jpeg","image/png"]};allConfig={multiple:!0,maxFileSizeMo:1,allowedExtensions:[".gif"],allowedMimeTypes:["image/jpeg","image/png"]};defaultResult;personnaliseResult;maxSizeResult;extensionResult;mimeResult;allResult;exampleHtml1='<button rca-button rcaInputFile id="input-file-default" (filesChange)="defaultChange($event)">Importer</button>';exampleHtml2='<button rca-button rcaInputFile id="input-file-personnalise" [rcaInputFileConfig]="personnaliseConfig" (filesChange)="personnaliseChange($event)">Importer</button>';exampleTs2="const personnaliseConfig: Partial<FileImporterRules> = {\n    multiple: true,\n    maxFileSizeMo: 3,\n    allowedExtensions: [`png`],\n    allowedMimeTypes: [`image/jpeg`, `image/png`],\n  };";defaultChange(result){this.defaultResult=result}personnaliseChange(result){this.personnaliseResult=result}maxSizeChange(result){this.personnaliseResult=result}extensionChange(result){this.personnaliseResult=result}mimeChange(result){this.personnaliseResult=result}allChange(result){this.personnaliseResult=result}printFiles(files){return files?files.map((file=>file.name)):["aucun fichier"]}};RcaInputFileDemoComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"rca-input-file-demo",template:'<div class="card-container padding-s">\n  <h1 class="h1-like secondary-color">Input File</h1>\n\n  <div class="demo-info-frame margin-top-s margin-bottom-s">\n    <h4 class="h4-like margin-bottom-xxs">Points importants :</h4>\n    <p>\n      La directive <code>rcaInputFile</code> permet de gérer l\'import de fichier via l\'API HTML 5 en\n      gardant un style de bouton <code>rca-button</code>.\n    </p>\n    Les options suivantes sont disponible:\n    <ul>\n      <li>Sélection unique ou multiple (unique par défaut)</li>\n      <li>Validation de la taille de chaque fichier (optionnelle)</li>\n      <li>Filtre et validation de l\'extension de fichier (optionnel)</li>\n      <li>Filtre et validation du type mime de fichier (optionnel)</li>\n      <li>À noter que les fichiers vides sont considérés comme étant en erreur</li>\n    </ul>\n    A la selection de fichier, l\'évènement <code>fileChange</code> est envoyé avec un objet\n    <code>FileImportResult</code> séparant les fichiers valides et invalides.\n  </div>\n\n\n  \x3c!--  Input File Par Défaut --\x3e\n  <div class="margin-bottom-m">\n    <h2 class="h2-like margin-top-s margin-bottom-s">Selecteur de fichier par défaut</h2>\n    <div class="demo-test-frame padding-m">\n      <button rca-button rcaInputFile id="input-file-default" (filesChange)="defaultChange($event)">Importer</button>\n      <p>Fichier sélectionné: {{ printFiles(defaultResult?.validFiles) }}</p>\n    </div>\n    <h3 class="h3-like margin-top-s margin-bottom-s">Code</h3>\n    <div>\n      <mat-tab-group class="rca-dsl-tabs">\n        <mat-tab label="Html">\n            <pre class="caption-font">\n              <code [languages]="[\'xml\']" [lineNumbers]="true" [highlight]="exampleHtml1"></code>\n            </pre>\n        </mat-tab>\n      </mat-tab-group>\n    </div>\n  </div>\n\n  \x3c!--  Input File Personnalisé --\x3e\n  <div class="margin-bottom-m">\n    <h2 class="h2-like margin-top-s margin-bottom-s">Selecteur de fichier personnalisé</h2>\n    <div class="demo-test-frame padding-m">\n      <button rca-button rcaInputFile id="input-file-personnalise" [rcaInputFileConfig]="personnaliseConfig" (filesChange)="personnaliseChange($event)">Importer</button>\n      <p>Fichier sélectionné: {{ printFiles(personnaliseResult?.validFiles) }}</p>\n    </div>\n    <h3 class="h3-like margin-top-s margin-bottom-s">Code</h3>\n    <div>\n      <mat-tab-group class="rca-dsl-tabs">\n        <mat-tab label="Html">\n            <pre class="caption-font">\n              <code [languages]="[\'xml\']" [lineNumbers]="true" [highlight]="exampleHtml2"></code>\n            </pre>\n        </mat-tab>\n        <mat-tab label="Ts">\n          <pre class="caption-font">\n           <code [languages]="[\'ts\']" [lineNumbers]="true" [highlight]="exampleTs2"></code>\n          </pre>\n        </mat-tab>\n      </mat-tab-group>\n    </div>\n  </div>\n\n  \x3c!-- Autres Formes --\x3e\n  <div class="margin-bottom-m">\n    <h2 class="h2-like margin-top-s margin-bottom-s">Autres formes</h2>\n\n    <div class="margin-bottom-s">\n      <h3 class="h3-like">Contrainte de taille (1Mo par fichier)</h3>\n      <div class="demo-test-frame">\n        <button\n                rca-button\n                rcaInputFile\n                appearance="ghost"\n                id="input-file-maxsize"\n                [rcaInputFileConfig]="maxSizeConfig"\n                (filesChange)="maxSizeChange($event)"\n        >\n          Hello\n        </button>\n        <p>\n          Fichier sélectionné:\n          {{ printFiles(maxSizeResult?.validFiles) }}\n        </p>\n        <p>\n          Fichiers en erreur:\n          {{ maxSizeResult?.errors ? printFiles(maxSizeResult.errors.fileSize) : \'aucune erreur\' }}\n        </p>\n      </div>\n    </div>\n\n    <div class="margin-bottom-s">\n      <h3 class="h3-like">Contrainte d\'extension (JPG, PNG)</h3>\n      <div class="demo-test-frame">\n        <button\n                rca-button\n                rcaInputFile\n                icon="rca-icon-add"\n                format="icon-only"\n                id="ipnut-file-extension"\n                [rcaInputFileConfig]="extensionConfig"\n                (filesChange)="extensionChange($event)"\n        ></button>\n        <p>\n          Fichier sélectionné:\n          {{ printFiles(extensionResult?.validFiles) }}\n        </p>\n        <p>\n          Fichiers en erreur:\n          {{ extensionResult?.errors ? printFiles(extensionResult.errors.type) : \'aucune erreur\' }}\n        </p>\n      </div>\n    </div>\n\n    <div class="margin-bottom-s">\n      <h3 class="h3-like">Contrainte de type mime (image/jpeg, image/png)</h3>\n      <div class="demo-test-frame">\n        <button\n                rca-button\n                rcaInputFile\n                icon="rca-icon-add"\n                appearance="outline"\n                color="secondary"\n                id="input-file-mime-1"\n                [rcaInputFileConfig]="mimeConfig"\n                (filesChange)="mimeChange($event)"\n        >\n          Importer\n        </button>\n        <p>\n          Fichier sélectionné:\n          {{ printFiles(mimeResult?.validFiles) }}\n        </p>\n        <p>\n          Fichiers en erreur:\n          {{ mimeResult?.errors ? printFiles(mimeResult.errors.type) : \'aucune erreur\' }}\n        </p>\n      </div>\n    </div>\n\n    <div class="margin-bottom-s">\n      <h3 class="h3-like">Contraintes type MIME (image/jpeg, image/png) + extension (.gif) + 1Mo</h3>\n      <div class="demo-test-frame">\n        <button\n                rca-button\n                rcaInputFile\n                icon="rca-icon-add"\n                format="icon-only"\n                appearance="minimal"\n                id="input-file-all"\n                [rcaInputFileConfig]="allConfig"\n                (filesChange)="allChange($event)"\n        ></button>\n        <p>\n          Fichier sélectionné:\n          {{ printFiles(allResult?.validFiles) }}\n        </p>\n        <p>Fichiers en erreur:</p>\n        <ul>\n          <li *ngIf="allResult?.errors?.type">Type: {{ printFiles(allResult.errors.type) }}</li>\n          <li *ngIf="allResult?.errors?.fileSize">Taille: {{ printFiles(allResult?.errors?.fileSize) }}</li>\n        </ul>\n      </div>\n    </div>\n  </div>\n\n</div>\n\n'})],RcaInputFileDemoComponent);var components_button=__webpack_require__("./libs/rca-design-system-library/src/lib/components/button/index.ts"),icons=__webpack_require__("./libs/rca-design-system-library/src/lib/icons/index.ts"),tabs=__webpack_require__("./node_modules/@angular/material/fesm2022/tabs.mjs"),rca_file_import_module=__webpack_require__("./libs/rca-design-system-library/src/lib/directives/rca-file-import/rca-file-import.module.ts");let RcaInputFileDemoModule=class RcaInputFileDemoModule{};RcaInputFileDemoModule=(0,tslib_es6.gn)([(0,core.NgModule)({declarations:[RcaInputFileDemoComponent],exports:[RcaInputFileDemoComponent,ngx_highlightjs._l],imports:[common.CommonModule,http.JF,icons.i,components_button.Nf,tabs.Nh,rca_file_import_module.E],providers:[src.L]})],RcaInputFileDemoModule);var animations=__webpack_require__("./node_modules/@angular/platform-browser/fesm2022/animations.mjs");const rca_input_file_demo_component_stories={title:"Formulaire/Input",component:RcaInputFileDemoComponent,decorators:[(0,dist.moduleMetadata)({imports:[RcaInputFileDemoModule]}),(0,dist.applicationConfig)({providers:[(0,animations.provideAnimations)()]})]},Fichier=(args=>({component:RcaInputFileDemoComponent,props:args})).bind({});Fichier.args={}}}]);